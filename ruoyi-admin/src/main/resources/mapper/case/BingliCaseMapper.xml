<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.caseCC.mapper.BingliCaseMapper">
    
    <resultMap type="BingliCase" id="BingliCaseResult">
        <result property="bingliCaseId"    column="bingli_case_id"    />
        <result property="userId"    column="user_id"    />
        <result property="sickbedId"    column="sickbed_id"    />
        <result property="userName"    column="user_name"    />
        <result property="caseName"    column="case_name"    />
        <result property="medicineId"    column="medicine_id"    />
        <result property="caseStatus"    column="case_status"    />
        <result property="nurseId"    column="nurse_id"    />
        <result property="doctorId"    column="doctor_id"    />
    </resultMap>

    <sql id="selectBingliCaseVo">
        select bingli_case_id, user_id, sickbed_id, user_name, case_name, medicine_id, case_status, nurse_id, doctor_id from bingli_case
    </sql>

    <select id="selectBingliCaseList" parameterType="BingliCase" resultMap="BingliCaseResult">
        <include refid="selectBingliCaseVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="sickbedId != null "> and sickbed_id = #{sickbedId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="caseName != null  and caseName != ''"> and case_name like concat('%', #{caseName}, '%')</if>
            <if test="medicineId != null  and medicineId != ''"> and medicine_id = #{medicineId}</if>
            <if test="caseStatus != null "> and case_status = #{caseStatus}</if>
            <if test="nurseId != null "> and nurse_id = #{nurseId}</if>
            <if test="doctorId != null "> and doctor_id = #{doctorId}</if>
        </where>
    </select>
    
    <select id="selectBingliCaseByBingliCaseId" parameterType="Long" resultMap="BingliCaseResult">
        <include refid="selectBingliCaseVo"/>
        where bingli_case_id = #{bingliCaseId}
    </select>

    <insert id="insertBingliCase" parameterType="BingliCase" useGeneratedKeys="true" keyProperty="bingliCaseId">
        insert into bingli_case
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="sickbedId != null">sickbed_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="caseName != null">case_name,</if>
            <if test="medicineId != null">medicine_id,</if>
            <if test="caseStatus != null">case_status,</if>
            <if test="nurseId != null">nurse_id,</if>
            <if test="doctorId != null">doctor_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="sickbedId != null">#{sickbedId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="caseName != null">#{caseName},</if>
            <if test="medicineId != null">#{medicineId},</if>
            <if test="caseStatus != null">#{caseStatus},</if>
            <if test="nurseId != null">#{nurseId},</if>
            <if test="doctorId != null">#{doctorId},</if>
         </trim>
    </insert>

    <update id="updateBingliCase" parameterType="BingliCase">
        update bingli_case
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="sickbedId != null">sickbed_id = #{sickbedId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="caseName != null">case_name = #{caseName},</if>
            <if test="medicineId != null">medicine_id = #{medicineId},</if>
            <if test="caseStatus != null">case_status = #{caseStatus},</if>
            <if test="nurseId != null">nurse_id = #{nurseId},</if>
            <if test="doctorId != null">doctor_id = #{doctorId},</if>
        </trim>
        where bingli_case_id = #{bingliCaseId}
    </update>

    <delete id="deleteBingliCaseByBingliCaseId" parameterType="Long">
        delete from bingli_case where bingli_case_id = #{bingliCaseId}
    </delete>

    <delete id="deleteBingliCaseByBingliCaseIds" parameterType="String">
        delete from bingli_case where bingli_case_id in 
        <foreach item="bingliCaseId" collection="array" open="(" separator="," close=")">
            #{bingliCaseId}
        </foreach>
    </delete>
</mapper>