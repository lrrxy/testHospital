<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.doctor.mapper.DoctorMapper">
    
    <resultMap type="Doctor" id="DoctorResult">
        <result property="doctorId"    column="doctor_id"    />
        <result property="doctorName"    column="doctor_name"    />
        <result property="doctorAge"    column="doctor_age"    />
        <result property="doctorSex"    column="doctor_sex"    />
        <result property="doctorStatus"    column="doctor_status"    />
        <result property="doctorBirthday"    column="doctor_birthday"    />
        <result property="idCard"    column="id_card"    />
        <result property="departmentId"    column="department_id"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectDoctorVo">
        select doctor_id, doctor_name, doctor_age, doctor_sex, doctor_status, doctor_birthday, id_card, department_id, create_time from doctor
    </sql>

    <select id="selectDoctorList" parameterType="Doctor" resultMap="DoctorResult">
        <include refid="selectDoctorVo"/>
        <where>  
            <if test="doctorName != null  and doctorName != ''"> and doctor_name like concat('%', #{doctorName}, '%')</if>
            <if test="doctorAge != null "> and doctor_age = #{doctorAge}</if>
            <if test="doctorSex != null  and doctorSex != ''"> and doctor_sex = #{doctorSex}</if>
            <if test="doctorStatus != null  and doctorStatus != ''"> and doctor_status = #{doctorStatus}</if>
            <if test="doctorBirthday != null "> and doctor_birthday = #{doctorBirthday}</if>
            <if test="idCard != null  and idCard != ''"> and id_card = #{idCard}</if>
            <if test="departmentId != null "> and department_id = #{departmentId}</if>
        </where>
    </select>
    
    <select id="selectDoctorByDoctorId" parameterType="Long" resultMap="DoctorResult">
        <include refid="selectDoctorVo"/>
        where doctor_id = #{doctorId}
    </select>

    <insert id="insertDoctor" parameterType="Doctor" useGeneratedKeys="true" keyProperty="doctorId">
        insert into doctor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="doctorName != null">doctor_name,</if>
            <if test="doctorAge != null">doctor_age,</if>
            <if test="doctorSex != null">doctor_sex,</if>
            <if test="doctorStatus != null">doctor_status,</if>
            <if test="doctorBirthday != null">doctor_birthday,</if>
            <if test="idCard != null">id_card,</if>
            <if test="departmentId != null">department_id,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="doctorName != null">#{doctorName},</if>
            <if test="doctorAge != null">#{doctorAge},</if>
            <if test="doctorSex != null">#{doctorSex},</if>
            <if test="doctorStatus != null">#{doctorStatus},</if>
            <if test="doctorBirthday != null">#{doctorBirthday},</if>
            <if test="idCard != null">#{idCard},</if>
            <if test="departmentId != null">#{departmentId},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateDoctor" parameterType="Doctor">
        update doctor
        <trim prefix="SET" suffixOverrides=",">
            <if test="doctorName != null">doctor_name = #{doctorName},</if>
            <if test="doctorAge != null">doctor_age = #{doctorAge},</if>
            <if test="doctorSex != null">doctor_sex = #{doctorSex},</if>
            <if test="doctorStatus != null">doctor_status = #{doctorStatus},</if>
            <if test="doctorBirthday != null">doctor_birthday = #{doctorBirthday},</if>
            <if test="idCard != null">id_card = #{idCard},</if>
            <if test="departmentId != null">department_id = #{departmentId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where doctor_id = #{doctorId}
    </update>

    <delete id="deleteDoctorByDoctorId" parameterType="Long">
        delete from doctor where doctor_id = #{doctorId}
    </delete>

    <delete id="deleteDoctorByDoctorIds" parameterType="String">
        delete from doctor where doctor_id in 
        <foreach item="doctorId" collection="array" open="(" separator="," close=")">
            #{doctorId}
        </foreach>
    </delete>
</mapper>